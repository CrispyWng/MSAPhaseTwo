name: Deploy_Containers
on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Terraform"]
    types: [completed]
    branches:
      - 'main'
jobs:
    build-and-deploy:
        runs-on: ubuntu-latest
        steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
        
        # - name: 'Build and push frontend image'
        #   uses: azure/docker-login@v1
        #   with:
        #     login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        #     username: ${{ secrets.SP_CLIENT_ID }}
        #     password: ${{ secrets.SP_SECRET }}
        # - run: |
        #     docker build ./frontend -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
        #     docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
        
        # - name: 'Build and push backend image'
        #   uses: azure/docker-login@v1
        #   with:
        #     login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        #     username: ${{ secrets.SP_CLIENT_ID }}
        #     password: ${{ secrets.SP_SECRET }}
        # - run: |
        #     docker build ./backend -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}
        #     docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}

        # # - name: 'Deploy to Azure Container Instances'
        # #   uses: 'azure/aci-deploy@v1'
        # #   with:
        # #     resource-group: ${{ secrets.RESOURCE_GROUP }}
        # #     dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
        # #     image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}
        # #     registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        # #     registry-username: ${{ secrets.REGISTRY_USERNAME }}
        # #     registry-password: ${{ secrets.REGISTRY_PASSWORD }}
        # #     name: crispy-frontend-instance
        # #     location: 'east us'

        # # Deploy frontend
        # - uses: azure/webapps-deploy@v2
        #   with:
        #     app-name: 'webapp-msa-crispy-frontend-wings'
        #     images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/frontend:${{ github.sha }}

        # - uses: azure/appservice-settings@v1
        #   with:
        #     app-name: 'webapp-msa-crispy-frontend-wings'
        #     app-settings-json: '${{ secrets.APPSETTINGS_FRONTEND }}'

        # # Deploy backend
        # - uses: azure/webapps-deploy@v2
        #   with:
        #     app-name: 'webapp-msa-crispy-backend-wings'
        #     images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/backend:${{ github.sha }}

        # - uses: azure/appservice-settings@v1
        #   with:
        #     app-name: 'webapp-msa-crispy-backend-wings'
        #     app-settings-json: '${{ secrets.APPSETTINGS_BACKEND }}'